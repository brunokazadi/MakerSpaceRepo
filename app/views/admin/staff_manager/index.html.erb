<section>
    <h2 class="fw-bold py-3 text-center">Staff Manager</h2>

    <div class="row">
    <div class="col-6">
    <h3 class="fw-bold py-1">Users to be made staff</h3>
        <div class="mb-3">
        <%= label_tag(:new_staff, "Add new staff members", class:"form-label") %>
        <%= select_tag(:new_staff, "", prompt: "Choose User...", :class => "new_staff_select form-control", :id => "new_staff_select", multiple: true) %>
    </div>
    <ul id="new-staff-list">
    </ul>
    </div>
    <div class="col-6">
    <h3 class="fw-bold py-1">Staff spaces</h3>
    <%= form_tag(bulk_add_users_staff_spaces_path, method: "post") do %>
      <div class="field form-group">
        <div class="checkbox-inline">
          <% @space_list.each do |space| %>
            <%= check_box_tag "space_ids[]", space.id, false, class:"form-check-input" %>
            <%= label_tag "space[]", space.name %>
            <%= hidden_field_tag "user_ids[]", [] %>
            <br>
          <% end %>
        </div>
      </div>
    </div>
      <button type="submit" class="btn btn-success mt-3 w-25 mx-auto">Confirm Changes</button>
    <% end %>
    </div>
</section>
<script>
    let staff_select = document.getElementById("new_staff_select");
    if (staff_select){
        if (!staff_select.tomselect){
        new TomSelect("#new_staff_select",{
            searchField: ['name'],
            valueField: 'id',
            labelField: 'name',
            options: [],
            maxOptions: 5,
            searchPlaceholder: 'Choose User...',
            searchOnKeyUp: true,
            load: function (type,callback) {
                if (type.length < 2) { return; } else {
                    let url = "/repositories/populate_users?search=" + type;
                    fetch(url).then(response => response.json()).then(data => {
                        console.log(data);
                        callback(data.users.map(user => {return {id: user.username, name: user.name}}));
                    });
                }
            },
            shouldLoad: function (type) {
                return type.length > 2;
            },
            onItemAdd: function(value, item){
                let listItem = document.createElement("li");
                listItem.setAttribute("data-id", value);
                listItem.setAttribute("class", "list-group-item");
                listItem.setAttribute("class","form-check");
                let removeButton = document.createElement("button");
                removeButton.setAttribute("class", "btn btn-sm btn-danger");
                let remove = document.createElement("i");
                remove.setAttribute("class", "fa fa-times");
                removeButton.addEventListener("click", function(){
                    removeButton.parentElement.remove();
                    document.getElementById("user_ids_").value = Array.from(document.getElementById("new-staff-list").children).map(child => child.dataset.id);
                })
                removeButton.appendChild(remove);
                listItem.appendChild(removeButton);
                let label = document.createElement("a");
                label.setAttribute("class", "form-check-label");
                label.setAttribute("class", "ms-2");
                label.innerHTML = item.innerText;
                label.setAttribute("href", "/" + value);
                listItem.appendChild(label);
                document.getElementById("new-staff-list").appendChild(listItem);
                item.remove();
                document.getElementById("new_staff_select-ts-control").value = "";
                document.getElementById("user_ids_").value = Array.from(document.getElementById("new-staff-list").children).map(child => child.dataset.id);
            }
        });
        }
    }
    </script>